name: Run tests


on:
  workflow_call:
    inputs:
      runs-on:
        default: ubuntu-latest
        type: string
      debug:
        required: true
        type: string
      oidc_configuration_url:
        required: true
        type: string
      verify_ssl:
        required: true
        type: string
      disable_auth :
        required: true
        type: string
      root_path:
        required: true
        type: string
      test:
        required: true
        type: string
    secrets:
      auth_token:
        required: true

env:
  DEBUG: ${{ inputs.debug }}
  OIDC_CONFIGURATION_URL: ${{ inputs.oidc_configuration_url }}
  VERIFY_SSL: ${{ inputs.verify_ssl }}
  DISABLE_AUTH: ${{ inputs.disable_auth }}
  ROOT_PATH: ${{ inputs.root_path }}
  AUTH_TOKEN: ${{ secrets.auth_token }}


jobs:
  test:
    runs-on: ${{ inputs.runs-on }}
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@v0.0.19
        with:
          addons: ingress,ingress-dns

      - name: Try the cluster
        run: kubectl get pods -A

      - name: Get the minikube IP and add it to /etc/hosts
        run: |
          echo "$(minikube ip) minikube.local" | sudo tee -a /etc/hosts

      - name: Add the third-party Helm repos
        run: |
            helm repo add argo https://argoproj.github.io/argo-helm
            helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/
            helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Install argo workflows from NaaVRE-helm
        run: |
          git clone https://github.com/NaaVRE/NaaVRE-helm.git
          cd NaaVRE-helm
          cp ./values/values-example-basic.yaml ./values/values-deploy-minikube-github.yaml
          helm dependency update naavre
          helm dependency build naavre
          context="minikube"
          namespace="naavre"
          release_name="naavre"
          helm template "$release_name" values/ --output-dir values/rendered -f "./values/values-deploy-$context.yaml" && \
          helm --kube-context "$context" -n "$namespace" upgrade --create-namespace --install "$release_name" naavre/ $(find values/rendered/values/templates -type f | xargs -I{} echo -n " -f {}")
          

      - run: pip install -r requirements.txt

#      - name: pytest
#        shell: bash -l {0}
#        run: |
#           pytest ${{ inputs.test }} -s --ignore=docker --ignore=cypress --no-header
