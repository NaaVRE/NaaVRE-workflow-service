name: make
on:
  release:
    types: [published]
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  schedule:
    - cron: '0 4 5,25 * *'

jobs:
  configure-workflow:
    name: Configure workflow
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      runner: "ubuntu-latest"
    steps:
      - id: skip_check
        name: Configure skip-duplicate-actions
        uses: fkirc/skip-duplicate-actions@v5
        with:
          paths_ignore: '["**/README.md"]'  # FIXME
          do_not_skip: '["workflow_dispatch", "schedule", "release"]'

  lint:
    uses: ./.github/workflows/lint.yml
    needs: [configure-workflow]
    if: ${{ needs.configure-workflow.outputs.should_skip != 'true' }}
    with:
      runs-on: ubuntu-latest

  # Workaround for empty test_list:
  # - disable call-collect-tests, split-tests, and call-pytest
  # - change call-build-container requirement (needs) from call-pytest to configure-workflow

#  call-collect-tests:
#    uses: ./.github/workflows/collect-tests.yml
#    with:
#      oidc_configuration_url: ${{ vars.OIDC_CONFIGURATION_URL }}
#
  split-tests:
    needs: [call-collect-tests]
    runs-on: ubuntu-latest
    outputs:
      test_list: ${{ steps.split-output.outputs.test_list }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download pytest output artifact
        uses: actions/download-artifact@v4
        with:
          name: test_list
          path: ./

      - name: Generate matrix from pytest_output
        id: split-output
        run: |
          cat test_list.json
          MATRIX=$(jq -c . test_list.json)
          echo $MATRIX
          echo "test_list=$MATRIX" >> $GITHUB_OUTPUT
#
  call-pytest:
    uses: ./.github/workflows/run-tests.yml
    needs: [configure-workflow,split-tests]
    if: ${{ needs.configure-workflow.outputs.should_skip != 'true' }}
    strategy:
      fail-fast: false
      matrix:
        test: ${{ fromJson(needs.split-tests.outputs.test_list) }}
    with:
      runs-on: ${{ needs.configure-workflow.outputs.runner }}
      debug: ${{ vars.DEBUG }}
      oidc_configuration_url: ${{ vars.OIDC_CONFIGURATION_URL }}
      verify_ssl: ${{ vars.VERIFY_SSL }}
      disable_auth: ${{ vars.DISABLE_AUTH }}
      root_path: ${{ vars.ROOT_PATH }}
      test: ${{ matrix.test }}
    secrets:
      auth_token: ${{ secrets.AUTH_TOKEN }}

  call-build-container:
#    needs: [call-pytest]
    needs: [configure-workflow]
    uses: ./.github/workflows/build-container.yml
    with:
      oci_tag: ghcr.io/naavre/naavre-workflow-service
      version: ${{ github.ref_type == 'tag' && github.ref_name || github.sha }}
      push: ${{ github.event_name == 'release' }}

  call-helm-chart-release:
    needs: [call-build-container]
    uses: ./.github/workflows/helm-chart-release.yml
    with:
      oci_repo: ghcr.io/naavre/charts
      version: ${{ github.ref_type == 'tag' && github.ref_name || github.sha }}
      push: ${{ github.event_name == 'release' }}

